<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>flopreynat.com</title>
    <description>website for flopreynat</description>
    <link>https://www.flopreynat.com/</link>
    <atom:link href="https://www.flopreynat.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 26 Dec 2019 21:56:19 +0100</pubDate>
    <lastBuildDate>Thu, 26 Dec 2019 21:56:19 +0100</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Spin up php server locally with Docker</title>
        <description>&lt;p&gt;Almost same use case and files than &lt;a href=&quot;http://flopreynat.com/blog/php-server-spin-easy.html&quot;&gt;last time&lt;/a&gt;.
But this time, using Docker, which I had been wanting to test out for so long.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;docker run -p 80:80 -v /Users/your-username/path-to-docker-folder/src/:/var/www/html/ hello-world&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Everything is brilliantly explained on this &lt;a href=&quot;https://www.youtube.com/watch?v=YFl2mCHdv24&quot;&gt;Learn Docker in 12 Minutes&lt;/a&gt; video.&lt;/p&gt;

&lt;p&gt;Like on last post, proof files &lt;a href=&quot;https://github.com/flopreynat/php-server-docker&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So long.&lt;/p&gt;
</description>
        <pubDate>Thu, 26 Dec 2019 00:00:00 +0100</pubDate>
        <link>https://www.flopreynat.com/blog/php-server-docker.html</link>
        <guid isPermaLink="true">https://www.flopreynat.com/blog/php-server-docker.html</guid>
        
        
        <category>tools</category>
        
      </item>
    
      <item>
        <title>Spin up php server locally in no time</title>
        <description>&lt;p&gt;Another post on tooling with this time a quick and easy way to locally spin up a php server, for - say - php templating and testing.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;php -S localhost:2222&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As mentioned &lt;a href=&quot;https://www.php.net/manual/en/features.commandline.webserver.php&quot;&gt;here&lt;/a&gt;, the CLI SAPI provides a built-in web server (as of PHP 5.4.0).&lt;/p&gt;

&lt;p&gt;It is not intended to be a full-featured web server. But designed to aid application development.&lt;/p&gt;

&lt;p&gt;Using the above command line is pretty much all is needed.
Proof &lt;a href=&quot;https://github.com/flopreynat/php-server&quot;&gt;here&lt;/a&gt; with a tiny templated php website.&lt;/p&gt;

&lt;p&gt;So long.&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Dec 2019 00:00:00 +0100</pubDate>
        <link>https://www.flopreynat.com/blog/php-server-spin-easy.html</link>
        <guid isPermaLink="true">https://www.flopreynat.com/blog/php-server-spin-easy.html</guid>
        
        
        <category>tools</category>
        
      </item>
    
      <item>
        <title>Crop documents with Mac&#39;s Preview</title>
        <description>&lt;p&gt;So you want to quickly/cheaply crop a jpg or pdf but have no tools lying around your mac to do so.
There’s actually an easy way to do it using Mac’s native image and PDF viewer Preview.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Command + K&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Really handy way if you can’t be bothered installing gimp, or alternative.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open the file in Preview&lt;/li&gt;
  &lt;li&gt;Select Tools &amp;gt; Rectangular Selection&lt;/li&gt;
  &lt;li&gt;Draw your selection area on the file&lt;/li&gt;
  &lt;li&gt;Use Command + K to crop the image&lt;/li&gt;
  &lt;li&gt;Save your document&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So long.&lt;/p&gt;
</description>
        <pubDate>Sun, 06 Oct 2019 00:00:00 +0200</pubDate>
        <link>https://www.flopreynat.com/blog/crop-documents-mac-preview.html</link>
        <guid isPermaLink="true">https://www.flopreynat.com/blog/crop-documents-mac-preview.html</guid>
        
        
        <category>tools</category>
        
      </item>
    
      <item>
        <title>Quick way to run a windows application on a mac</title>
        <description>&lt;p&gt;From time to time, as a mac owner, you’ll have to run a Windows application for testing (or other) purposes.&lt;/p&gt;

&lt;p&gt;Obviously, there are tons of solutions allowing you to run windows on a mac, but not all are light, free and quick wins.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;VIRTUALIZATION TIME&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The quickest and easisest way (to me) is to use &lt;a href=&quot;https://www.virtualbox.org/&quot;&gt;Virtualbox&lt;/a&gt; (open source and free), download a free virtual Windows machine from the &lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/&quot;&gt;Microsoft developer website&lt;/a&gt;, and spin it.&lt;/p&gt;

&lt;p&gt;So, ok, those virtual machines expire after 90 days. In most cases, this will be way enough for you to test your application, and run your stuff.&lt;/p&gt;

&lt;p&gt;One thing you may need while you’re playing with your windows machine, is to share things with your mac. Sharing folders between your machine and a VM is not native. Here’s how you do it:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;In Virtualbox, select your VM, and go to Settings &amp;gt; Shared Folders, and add the folder (on your mac) you wish to use on your VM&lt;/li&gt;
  &lt;li&gt;Then go to Settings &amp;gt; Storage and add an optical drive (+ and cdrom icon) to your IDE controller (choose ‘Leave Empty’)&lt;/li&gt;
  &lt;li&gt;Start your VM&lt;/li&gt;
  &lt;li&gt;In Virtulabox, go to Devices &amp;gt; Insert Guest Additions CD Image, and run the install program&lt;/li&gt;
  &lt;li&gt;Once the program has been installed, reboot your VM&lt;/li&gt;
  &lt;li&gt;That’s it, ope file explorer, your file sharing folder should be appearing in there.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hope this helps.&lt;/p&gt;

</description>
        <pubDate>Fri, 02 Aug 2019 00:00:00 +0200</pubDate>
        <link>https://www.flopreynat.com/blog/quick-way-run-windows-application-on-mac.html</link>
        <guid isPermaLink="true">https://www.flopreynat.com/blog/quick-way-run-windows-application-on-mac.html</guid>
        
        
        <category>tools</category>
        
      </item>
    
      <item>
        <title>Macbook Pro boot up issue with no startup chime... WTF</title>
        <description>&lt;p&gt;Already talked about this issue once… &lt;a href=&quot;http://flopreynat.com/blog/macbook-pro-boots-to-black-screen.html&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;, except this time I don’t have the chance to hear the startup chime, nor to reset any PRAM, nothing.&lt;/p&gt;

&lt;p&gt;The only chance I get is to enter my password and see the apple screen get stuck for ever.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;SAFE MODE&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once I enter my password, the only thing I can do is press on the SHIFT key and hold it, until I enter the Safe mode.&lt;/p&gt;

&lt;p&gt;At this stage, If you reboot, or try any disk utility, it should not fix the issue.
If you’re lucky (like me), you’ll have some software updates to install.&lt;/p&gt;

&lt;p&gt;Launch the download/restart and install and hope for the best.
It did work in my case.&lt;/p&gt;
</description>
        <pubDate>Sat, 16 Feb 2019 00:00:00 +0100</pubDate>
        <link>https://www.flopreynat.com/blog/macbook-pro-boot-up-issue-no-startup-chime.html</link>
        <guid isPermaLink="true">https://www.flopreynat.com/blog/macbook-pro-boot-up-issue-no-startup-chime.html</guid>
        
        
        <category>apple</category>
        
      </item>
    
      <item>
        <title>Github: 2FA and personal token</title>
        <description>&lt;p&gt;So you’ve decided to turn on two-factor authentication (as you do) for your github account and you can’t commit (anymore) to your repos using the command line.&lt;/p&gt;

&lt;p&gt;TL;DR&lt;/p&gt;

&lt;p&gt;Create a personal token.&lt;/p&gt;

&lt;p&gt;You won’t be asked to provide a 2FA code when authenticating to GitHub on the command line using HTTPS URLs.
Instead, you must create a personal access token and use its as a password.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Log into your account&lt;/li&gt;
  &lt;li&gt;Click on your avatar, then Settings&lt;/li&gt;
  &lt;li&gt;Click on Developer Settings&lt;/li&gt;
  &lt;li&gt;Choose Personal access tokens&lt;/li&gt;
  &lt;li&gt;Generate new token&lt;/li&gt;
  &lt;li&gt;Give your token a name&lt;/li&gt;
  &lt;li&gt;Select the scope and permissions of your token&lt;/li&gt;
  &lt;li&gt;Use your token as your password when prompted in the terminal&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Done ;)&lt;/p&gt;
</description>
        <pubDate>Fri, 23 Mar 2018 00:00:00 +0100</pubDate>
        <link>https://www.flopreynat.com/blog/github-2fa-personal-token.html</link>
        <guid isPermaLink="true">https://www.flopreynat.com/blog/github-2fa-personal-token.html</guid>
        
        
        <category>github</category>
        
      </item>
    
      <item>
        <title>Fontawesome Alfred Workflow</title>
        <description>&lt;ol&gt;
  &lt;li&gt;You have &lt;a href=&quot;https://www.alfredapp.com/&quot;&gt;Alfred&lt;/a&gt; and use it on a regular basis?&lt;/li&gt;
  &lt;li&gt;Your job is to build websites, or simple protoypes?&lt;/li&gt;
  &lt;li&gt;You’re a fan of &lt;a href=&quot;https://fontawesome.com/&quot;&gt;Font Awesome&lt;/a&gt;?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Then you can leverage the power of Alfred’s Workflow and use it on the fly when including font awesome parameters into your designs.&lt;/p&gt;

&lt;p&gt;Simply donwload Alfred’s &lt;a href=&quot;https://github.com/ruedap/alfred-font-awesome-workflow#installation&quot;&gt;Font Awesome worklfow&lt;/a&gt;, and you’re good to go.&lt;/p&gt;

&lt;p&gt;Invoke the use of Alfred while designing (usually with ‘ALT+ENTER’), type fa and search through the available icons, pick one and click ‘ENTER’, your class is in your design.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/fontawesome-alfred-workflow.gif&quot; alt=&quot;Fontawesome Alfred Workflow&quot; title=&quot;Fontawesome Alfred Workflow&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 01 Jan 2018 00:00:00 +0100</pubDate>
        <link>https://www.flopreynat.com/blog/fontawesome-alfred-workflow.html</link>
        <guid isPermaLink="true">https://www.flopreynat.com/blog/fontawesome-alfred-workflow.html</guid>
        
        
        <category>productivity</category>
        
      </item>
    
      <item>
        <title>No camera was found</title>
        <description>&lt;p&gt;You’re most likely running on Mavericks, or El Capitan, are using your mac or a monitor with integrated camera, and keep on getting something along the lines of ‘no camera was found’ messages from Hangout or other web conferencing apps.&lt;/p&gt;

&lt;p&gt;Issue happened to me on dozens of times with an Apple Thunderbolt.&lt;/p&gt;

&lt;p&gt;This post isn’t intended to get to the bottom of this issue. So you can put back the screwdrivers where they belong.
These few lines are only here to present you with a workaround, and remind myself of this little fix.&lt;/p&gt;

&lt;p&gt;So,… Issue seems related to the VDCAssistant process getting invoked every time the camera is being used by an app, but not properly closing, hence blocking its future use.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Kill ‘em all&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Open the terminal, and run the following command:&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&quot;language-ruby&quot;&gt;
$ sudo killall VDCAssistant
&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;You’ll need to input your master password. Camera should be up again. 
For now…&lt;/p&gt;

&lt;p&gt;As I said, just a workaround.&lt;/p&gt;

&lt;p&gt;So long.&lt;/p&gt;
</description>
        <pubDate>Wed, 31 May 2017 00:00:00 +0200</pubDate>
        <link>https://www.flopreynat.com/blog/no-camera-was-found.html</link>
        <guid isPermaLink="true">https://www.flopreynat.com/blog/no-camera-was-found.html</guid>
        
        
        <category>apple</category>
        
      </item>
    
      <item>
        <title>Responsive email design framework MJML to the test</title>
        <description>&lt;p&gt;Email design is a real pain in the arse. We all know that. Therefore I decided to give &lt;a href=&quot;https://mjml.io/&quot;&gt;mjml&lt;/a&gt; a go. For those who don’t know of mjml.io, it’s a responsive email design framework built by a team of developers at &lt;a href=&quot;https://www.mailjet.com&quot;&gt;Mailjet&lt;/a&gt;, a competitor of &lt;a href=&quot;https://mailchimp.com/&quot;&gt;Mailchimp&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The beauty of this framework results in the fact that you create something very much close to html, using an MJML markup language, and as mentioned in its detailed documentation, &lt;em&gt;“its semantic syntax makes it easy and straightforward and its rich standard components library speeds up your development time and lightens your email codebase.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;MJML’s open-source engine, which is - by the way - written in &lt;a href=&quot;https://nodejs.org/en/&quot;&gt;NodeJS&lt;/a&gt; (hence easily installed via &lt;a href=&quot;https://www.npmjs.com/package/mjml&quot;&gt;npm&lt;/a&gt;), leverages ReactJS and takes your mjml email designs to process high quality responsive HTML compliant with best practices. That’s the whole idea.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Easy and quick, Responsive, Component based&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As I had nothing much to work with for starters, I decided to use somebody else’s work, and picked this beautiful minimalistic &lt;a href=&quot;https://dribbble.com/shots/1518379-Newsletter&quot;&gt;newsletter&lt;/a&gt; (designed by Dmitri Litvinov) I found on dribbble.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/mjml-dribbble-model.jpg&quot; alt=&quot;newsletter model&quot; title=&quot;newsletter model&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I won’t go into the details of the design process but with the help of the doc, I put all the components together in a matter of minutes, generated the html template using the terminal and the follwowing syntax:&lt;/p&gt;

&lt;pre&gt;
&lt;code class=&quot;language-ruby&quot;&gt;
mjml yourfile.mjml
&lt;/code&gt;
&lt;/pre&gt;

&lt;h4 id=&quot;results&quot;&gt;Results&lt;/h4&gt;

&lt;p&gt;Here’s the final result of my work in both gmail and protonmail. 
Something not only esthetic but fully functional.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/mjml-results.jpg&quot; alt=&quot;mjml results&quot; title=&quot;mjml results&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;verdict&quot;&gt;Verdict&lt;/h4&gt;

&lt;p&gt;If you’re willing to send what looks like a professional responsive email, without having to use a third-party design service, then I defo advise you to give mjml a shot.&lt;/p&gt;

&lt;p&gt;So long.&lt;/p&gt;
</description>
        <pubDate>Tue, 16 May 2017 00:00:00 +0200</pubDate>
        <link>https://www.flopreynat.com/blog/responsive-email-design-framework-mjml.html</link>
        <guid isPermaLink="true">https://www.flopreynat.com/blog/responsive-email-design-framework-mjml.html</guid>
        
        
        <category>email</category>
        
      </item>
    
      <item>
        <title>DuckDuckGo hacks for developers</title>
        <description>&lt;p&gt;DuckDuckGo is by far the best search engine out there. For your own privacy for starters, and also as a great little tool for us dev folks, adept of quick tech &amp;amp; code answers, and geeky little features.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Smarter Search!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A few tips and tricks that you may not know of. I’ve been using some for few for months, and only discovered others in the last few days.&lt;/p&gt;

&lt;h4 id=&quot;navigation&quot;&gt;Navigation&lt;/h4&gt;

&lt;p&gt;Navigate through search results using Vim Line Navigation
k – navigate upwards
j – navigate downwards&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/duckduckgo-navigation.gif&quot; alt=&quot;duckduckgo navigation&quot; title=&quot;duckduckgo navigation&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;cheatsheets&quot;&gt;Cheatsheets&lt;/h4&gt;

&lt;p&gt;DuckDuckGo offers a wide range of cheatsheets. Try them out. Just type the language, app, or software of your choice + cheatsheet.
e.g. &lt;a href=&quot;https://duckduckgo.com/?q=jquery+cheatsheet&amp;amp;t=ffab&amp;amp;ia=cheatsheet&quot;&gt;“jquery cheatsheet”&lt;/a&gt;, &lt;a href=&quot;https://duckduckgo.com/?q=css+cheatsheet&amp;amp;t=ffab&amp;amp;ia=cheatsheet&quot;&gt;“css cheatsheet”&lt;/a&gt;, &lt;a href=&quot;https://duckduckgo.com/?q=javascript+cheatsheet&amp;amp;t=ffab&amp;amp;ia=cheatsheet&quot;&gt;“javascript cheatsheet”&lt;/a&gt;, etc&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/duckduckgo-cheatsheet.jpg&quot; alt=&quot;duckduckgo cheatsheet&quot; title=&quot;duckduckgo cheatsheet&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;validators-converters-and-beautifiers&quot;&gt;Validators, converters and beautifiers&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://duckduckgo.com/?q=json+validation&amp;amp;ia=answer&quot;&gt;“JSON Beautifier &amp;amp; Validator”&lt;/a&gt;, &lt;a href=&quot;https://duckduckgo.com/?q=HTML+beautifier&amp;amp;ia=answer&quot;&gt;“HTML beautifier”&lt;/a&gt;, &lt;a href=&quot;https://duckduckgo.com/?q=sass+to+css&amp;amp;ia=answer&quot;&gt;“Sass to Css Converter”&lt;/a&gt;, and more…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/duckduckgo-json-validation.jpg&quot; alt=&quot;duckduckgo json validation&quot; title=&quot;duckduckgo json validation&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;colors&quot;&gt;Colors&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://duckduckgo.com/?q=color+picker&amp;amp;ia=answer&quot;&gt;“Color picker”&lt;/a&gt; with RGB, HSV, CMYK conversion and &lt;a href=&quot;https://duckduckgo.com/?q=%23000000&amp;amp;ia=answer&quot;&gt;“Hex code converter”&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/duckduckgo-color.jpg&quot; alt=&quot;duckduckgo color&quot; title=&quot;duckduckgo color&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;qa&quot;&gt;Q/A&lt;/h4&gt;

&lt;p&gt;…on coding questions like &lt;a href=&quot;https://duckduckgo.com/?q=how+to+select+img+with+jquery&amp;amp;ia=qa&quot;&gt;“how to select img with jquery”&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/duckduckgo-qa.jpg&quot; alt=&quot;duckduckgo q&amp;amp;a&quot; title=&quot;duckduckgo q&amp;amp;a&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;bangs&quot;&gt;Bangs&lt;/h4&gt;

&lt;p&gt;If you wish to look for something on a specific site, like Stack Overflow (!stack + query) or CSS-Tricks (!csstricks + query). The list of bangs is &lt;a href=&quot;https://duckduckgo.com/bang&quot;&gt;“here”&lt;/a&gt;.
Here’s a cool one you can try yourselves: &lt;a href=&quot;!caniuse flexbox&quot;&gt;“!caniuse flexbox”&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/duckduckgo-bangs.jpg&quot; alt=&quot;duckduckgo bangs&quot; title=&quot;duckduckgo bangs&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 18 Apr 2017 00:00:00 +0200</pubDate>
        <link>https://www.flopreynat.com/blog/duckduckgo-hacks-for-developers.html</link>
        <guid isPermaLink="true">https://www.flopreynat.com/blog/duckduckgo-hacks-for-developers.html</guid>
        
        
        <category>search</category>
        
      </item>
    
  </channel>
</rss>
